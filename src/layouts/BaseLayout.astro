---
import NavBar from "@components/navigation/NavBar.astro";
import { SEO, TwitterCardType } from "astro-seo";
import BaseFooter from "./BaseFooter.astro";

import "./BaseLayout.scss";

type OpenGraphProps = {
  basic: {
    title: string;
    type: string;
    image: string;
    url?: string;
  };
  optional?: {
    audio?: string;
    description?: string;
    determiner?: string;
    locale?: string;
    localeAlternate?: string[];
    siteName?: string;
    video?: string;
  };
  image?: {
    url?: string;
    secureUrl?: string;
    type?: string;
    width?: number;
    height?: number;
    alt?: string;
  };
  article?: {
    publishedTime?: string;
    modifiedTime?: string;
    expirationTime?: string;
    authors?: string[];
    section?: string;
    tags?: string[];
  };
};

export type TwitterSEOProps = {
  card?: TwitterCardType;
  site?: string;
  creator?: string;
  title?: string;
  description?: string;
  image?: string;
  imageAlt?: string;
};

type Props = {
  pageTitle: string;
  seo: {
    description: string;
    title: string;
    image: string;
    imageAlt: string;
    type: "website" | "article" | "event";
    og: {
      title: string;
    };
    twitter: {
      card: TwitterCardType;
    };
    tags?: string[];
    nofollow?: boolean;
    noindex?: boolean;
  };
  hasNavBarColor?: boolean;
  isNavBarSticky?: boolean;
};

const {
  pageTitle,
  seo,
  isNavBarSticky = true,
  hasNavBarColor = false,
} = Astro.props;

const generateOpenGraphProps = (): OpenGraphProps => {
  let props: OpenGraphProps = {
    basic: {
      title: seo.og.title,
      type: seo.type,
      image: new URL(seo.image, Astro.url).href,
      url: Astro.url.href,
    },
    optional: {
      description: seo.description,
      siteName: "Beer Tech Group",
      locale: "it",
    },
    image: {
      alt: seo.imageAlt,
      url: new URL(seo.image, Astro.url).href,
    },
    article: {
      tags: seo.tags ?? [],
    },
  };

  return props;
};

const generateTwitterProps = (): TwitterSEOProps => {
  let props: TwitterSEOProps = {
    card: seo.twitter.card,
    title: seo.title,
    description: seo.description,
    image: new URL(seo.image, Astro.url).href,
    imageAlt: seo.imageAlt,
    site: "Beer Tech Group",
    creator: "@beertechgroup",
  };

  if (props.image) {
    props.image = new URL(props.image, Astro.url).href;
  }

  return props;
};
---

<html lang="it">
  <head>
    <SEO
      title={pageTitle}
      titleTemplate={` %s - Beer Tech Group`}
      titleDefault={`Beer Tech Group`}
      description={seo.description}
      charset="utf-8"
      openGraph={generateOpenGraphProps()}
      twitter={generateTwitterProps()}
      nofollow={seo.nofollow ?? false}
      noindex={seo.noindex ?? false}
    />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-icon-57x57.png" />
    <link rel="apple-touch-icon" sizes="60x60" href="/apple-icon-60x60.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-icon-72x72.png" />
    <link rel="apple-touch-icon" sizes="76x76" href="/apple-icon-76x76.png" />
    <link
      rel="apple-touch-icon"
      sizes="114x114"
      href="/apple-icon-114x114.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="120x120"
      href="/apple-icon-120x120.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="144x144"
      href="/apple-icon-144x144.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="152x152"
      href="/apple-icon-152x152.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/apple-icon-180x180.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="192x192"
      href="/android-icon-192x192.png"
    />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/manifest.json" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="msapplication-TileImage" content="/ms-icon-144x144.png" />
    <meta name="theme-color" content="#ffffff" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Cutive+Mono&family=Montserrat:ital,wght@0,400;0,700;1,400;1,700&family=Oswald:wght@500&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined"
    />
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/tsparticles/2.9.3/tsparticles.min.js"
      integrity="sha512-+YPbXItNhUCZR3fn5KeWPtJrXuoqRYQ4Gd1rIjEFG+h8UJYekebhOMh84vv7q+Y1sy5kdIIVtfftehCiigriMQ=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    ></script>
  </head>
  <body class="border-box prose">
    <!-- Insert this script at the bottom of the HTML, but before you use any Firebase services -->
    <script src="/__/firebase/8.10.1/firebase-app.js" is:inline></script>
    <script src="/__/firebase/init.js" is:inline></script>
    <script src="/__/firebase/8.10.1/firebase-analytics.js" is:inline></script>
    <script src="/__/firebase/8.10.1/firebase-app-check.js" is:inline></script>
    <script type="text/javascript">
      const appCheck = firebase.appCheck();
      appCheck.activate("6LezKyglAAAAADkwbot5tqKAqAF-FmKYMo69ZGz_", true);
    </script>
    <div class="flex h-screen flex-col justify-between">
      <header>
        <NavBar
          pageTitle={pageTitle}
          hasColor={hasNavBarColor}
          sticky={isNavBarSticky}
        />
        <slot name="after-header" />
      </header>
      <section class="mb-auto px-4 sm:px-10 lg:px-16">
        <slot />
      </section>
      <BaseFooter />
    </div>
  </body>
</html>
